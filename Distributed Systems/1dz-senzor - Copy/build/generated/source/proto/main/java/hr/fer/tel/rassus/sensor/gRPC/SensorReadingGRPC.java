// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: readingExchange.proto

package hr.fer.tel.rassus.sensor.gRPC;

/**
 * Protobuf type {@code hr.fer.tel.rassus.SensorReadingGRPC}
 */
public final class SensorReadingGRPC extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:hr.fer.tel.rassus.SensorReadingGRPC)
    SensorReadingGRPCOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SensorReadingGRPC.newBuilder() to construct.
  private SensorReadingGRPC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SensorReadingGRPC() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SensorReadingGRPC();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SensorReadingGRPC(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 9: {

            temperature_ = input.readDouble();
            break;
          }
          case 17: {

            pressure_ = input.readDouble();
            break;
          }
          case 25: {

            humidity_ = input.readDouble();
            break;
          }
          case 33: {

            co_ = input.readDouble();
            break;
          }
          case 41: {

            so2_ = input.readDouble();
            break;
          }
          case 49: {

            no2_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return hr.fer.tel.rassus.sensor.gRPC.ReadingExchangeOuterClass.internal_static_hr_fer_tel_rassus_SensorReadingGRPC_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return hr.fer.tel.rassus.sensor.gRPC.ReadingExchangeOuterClass.internal_static_hr_fer_tel_rassus_SensorReadingGRPC_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.class, hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.Builder.class);
  }

  public static final int TEMPERATURE_FIELD_NUMBER = 1;
  private double temperature_;
  /**
   * <code>double temperature = 1;</code>
   * @return The temperature.
   */
  @java.lang.Override
  public double getTemperature() {
    return temperature_;
  }

  public static final int PRESSURE_FIELD_NUMBER = 2;
  private double pressure_;
  /**
   * <code>double pressure = 2;</code>
   * @return The pressure.
   */
  @java.lang.Override
  public double getPressure() {
    return pressure_;
  }

  public static final int HUMIDITY_FIELD_NUMBER = 3;
  private double humidity_;
  /**
   * <code>double humidity = 3;</code>
   * @return The humidity.
   */
  @java.lang.Override
  public double getHumidity() {
    return humidity_;
  }

  public static final int CO_FIELD_NUMBER = 4;
  private double co_;
  /**
   * <code>double co = 4;</code>
   * @return The co.
   */
  @java.lang.Override
  public double getCo() {
    return co_;
  }

  public static final int SO2_FIELD_NUMBER = 5;
  private double so2_;
  /**
   * <code>double so2 = 5;</code>
   * @return The so2.
   */
  @java.lang.Override
  public double getSo2() {
    return so2_;
  }

  public static final int NO2_FIELD_NUMBER = 6;
  private double no2_;
  /**
   * <code>double no2 = 6;</code>
   * @return The no2.
   */
  @java.lang.Override
  public double getNo2() {
    return no2_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (temperature_ != 0D) {
      output.writeDouble(1, temperature_);
    }
    if (pressure_ != 0D) {
      output.writeDouble(2, pressure_);
    }
    if (humidity_ != 0D) {
      output.writeDouble(3, humidity_);
    }
    if (co_ != 0D) {
      output.writeDouble(4, co_);
    }
    if (so2_ != 0D) {
      output.writeDouble(5, so2_);
    }
    if (no2_ != 0D) {
      output.writeDouble(6, no2_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (temperature_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, temperature_);
    }
    if (pressure_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, pressure_);
    }
    if (humidity_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, humidity_);
    }
    if (co_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, co_);
    }
    if (so2_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, so2_);
    }
    if (no2_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, no2_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC)) {
      return super.equals(obj);
    }
    hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC other = (hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC) obj;

    if (java.lang.Double.doubleToLongBits(getTemperature())
        != java.lang.Double.doubleToLongBits(
            other.getTemperature())) return false;
    if (java.lang.Double.doubleToLongBits(getPressure())
        != java.lang.Double.doubleToLongBits(
            other.getPressure())) return false;
    if (java.lang.Double.doubleToLongBits(getHumidity())
        != java.lang.Double.doubleToLongBits(
            other.getHumidity())) return false;
    if (java.lang.Double.doubleToLongBits(getCo())
        != java.lang.Double.doubleToLongBits(
            other.getCo())) return false;
    if (java.lang.Double.doubleToLongBits(getSo2())
        != java.lang.Double.doubleToLongBits(
            other.getSo2())) return false;
    if (java.lang.Double.doubleToLongBits(getNo2())
        != java.lang.Double.doubleToLongBits(
            other.getNo2())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTemperature()));
    hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPressure()));
    hash = (37 * hash) + HUMIDITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getHumidity()));
    hash = (37 * hash) + CO_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCo()));
    hash = (37 * hash) + SO2_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSo2()));
    hash = (37 * hash) + NO2_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getNo2()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code hr.fer.tel.rassus.SensorReadingGRPC}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:hr.fer.tel.rassus.SensorReadingGRPC)
      hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPCOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hr.fer.tel.rassus.sensor.gRPC.ReadingExchangeOuterClass.internal_static_hr_fer_tel_rassus_SensorReadingGRPC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hr.fer.tel.rassus.sensor.gRPC.ReadingExchangeOuterClass.internal_static_hr_fer_tel_rassus_SensorReadingGRPC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.class, hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.Builder.class);
    }

    // Construct using hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      temperature_ = 0D;

      pressure_ = 0D;

      humidity_ = 0D;

      co_ = 0D;

      so2_ = 0D;

      no2_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return hr.fer.tel.rassus.sensor.gRPC.ReadingExchangeOuterClass.internal_static_hr_fer_tel_rassus_SensorReadingGRPC_descriptor;
    }

    @java.lang.Override
    public hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC getDefaultInstanceForType() {
      return hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.getDefaultInstance();
    }

    @java.lang.Override
    public hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC build() {
      hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC buildPartial() {
      hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC result = new hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC(this);
      result.temperature_ = temperature_;
      result.pressure_ = pressure_;
      result.humidity_ = humidity_;
      result.co_ = co_;
      result.so2_ = so2_;
      result.no2_ = no2_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC) {
        return mergeFrom((hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC other) {
      if (other == hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC.getDefaultInstance()) return this;
      if (other.getTemperature() != 0D) {
        setTemperature(other.getTemperature());
      }
      if (other.getPressure() != 0D) {
        setPressure(other.getPressure());
      }
      if (other.getHumidity() != 0D) {
        setHumidity(other.getHumidity());
      }
      if (other.getCo() != 0D) {
        setCo(other.getCo());
      }
      if (other.getSo2() != 0D) {
        setSo2(other.getSo2());
      }
      if (other.getNo2() != 0D) {
        setNo2(other.getNo2());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double temperature_ ;
    /**
     * <code>double temperature = 1;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public double getTemperature() {
      return temperature_;
    }
    /**
     * <code>double temperature = 1;</code>
     * @param value The temperature to set.
     * @return This builder for chaining.
     */
    public Builder setTemperature(double value) {
      
      temperature_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double temperature = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTemperature() {
      
      temperature_ = 0D;
      onChanged();
      return this;
    }

    private double pressure_ ;
    /**
     * <code>double pressure = 2;</code>
     * @return The pressure.
     */
    @java.lang.Override
    public double getPressure() {
      return pressure_;
    }
    /**
     * <code>double pressure = 2;</code>
     * @param value The pressure to set.
     * @return This builder for chaining.
     */
    public Builder setPressure(double value) {
      
      pressure_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double pressure = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPressure() {
      
      pressure_ = 0D;
      onChanged();
      return this;
    }

    private double humidity_ ;
    /**
     * <code>double humidity = 3;</code>
     * @return The humidity.
     */
    @java.lang.Override
    public double getHumidity() {
      return humidity_;
    }
    /**
     * <code>double humidity = 3;</code>
     * @param value The humidity to set.
     * @return This builder for chaining.
     */
    public Builder setHumidity(double value) {
      
      humidity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double humidity = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHumidity() {
      
      humidity_ = 0D;
      onChanged();
      return this;
    }

    private double co_ ;
    /**
     * <code>double co = 4;</code>
     * @return The co.
     */
    @java.lang.Override
    public double getCo() {
      return co_;
    }
    /**
     * <code>double co = 4;</code>
     * @param value The co to set.
     * @return This builder for chaining.
     */
    public Builder setCo(double value) {
      
      co_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double co = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCo() {
      
      co_ = 0D;
      onChanged();
      return this;
    }

    private double so2_ ;
    /**
     * <code>double so2 = 5;</code>
     * @return The so2.
     */
    @java.lang.Override
    public double getSo2() {
      return so2_;
    }
    /**
     * <code>double so2 = 5;</code>
     * @param value The so2 to set.
     * @return This builder for chaining.
     */
    public Builder setSo2(double value) {
      
      so2_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double so2 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSo2() {
      
      so2_ = 0D;
      onChanged();
      return this;
    }

    private double no2_ ;
    /**
     * <code>double no2 = 6;</code>
     * @return The no2.
     */
    @java.lang.Override
    public double getNo2() {
      return no2_;
    }
    /**
     * <code>double no2 = 6;</code>
     * @param value The no2 to set.
     * @return This builder for chaining.
     */
    public Builder setNo2(double value) {
      
      no2_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double no2 = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearNo2() {
      
      no2_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:hr.fer.tel.rassus.SensorReadingGRPC)
  }

  // @@protoc_insertion_point(class_scope:hr.fer.tel.rassus.SensorReadingGRPC)
  private static final hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC();
  }

  public static hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensorReadingGRPC>
      PARSER = new com.google.protobuf.AbstractParser<SensorReadingGRPC>() {
    @java.lang.Override
    public SensorReadingGRPC parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SensorReadingGRPC(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SensorReadingGRPC> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensorReadingGRPC> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public hr.fer.tel.rassus.sensor.gRPC.SensorReadingGRPC getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

